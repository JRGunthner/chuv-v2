#include "Screen.h"
#include "NTC.h"

#define SCREEN_BUFFER_LEN 20



static uint8_t Time = 0;
uint8_t DisplayBuffer[SCREEN_BUFFER_LEN];

uint8_t MainScreen = SCREEN_MAIN_IDLE;
uint8_t Screen = SCREEN_MAIN;
uint8_t iSize = 0;
uint8_t iSizeAux = 0;
uint16_t sleep = 0;

uint16_t ScreenTemp;
uint16_t ScreenUser;

int32_t DValue;

#define TIMEOUT_SCREEN_VERSION  20   // 2s
#define TIMEOUT_SCREEN_FLOW     40   // 4s
#define TIMEOUT_SCREEN_SETPOINT 20   // 2s
#define TIMEOUT_SCREEN_USER     20   // 2s
#define TIMEOUT_SCREEN_POWER    20   // 2s
#define TIMEOUT_SCREEN_TE       20   // 2s
#define TIMEOUT_SCREEN_TS       20   // 2s

//==================================================================================================
//
//==================================================================================================
void Screen_Task()
{
    switch( Screen )
	{
		//--------------------------------------------
		case SCREEN_MSG:
		{
			Display_UpdateChar(DisplayBuffer[iSizeAux] , DisplayBuffer[iSizeAux+1] );
			iSizeAux = iSizeAux+1;
			if(iSizeAux >  iSize)
			{
				iSize = 0;
				iSizeAux = 0;
				Screen = SCREEN_MAIN;
			}
			break;
		}
		//--------------------------------------------
		case SCREEN_MAIN:
		{
			if( MainScreen == SCREEN_MAIN_POWER ) //POWER
			{
				Display_UpdateChar('P',ScreenTemp);
			}
			else if( MainScreen == SCREEN_MAIN_TEMPERATURE) //TEMPERATURE
			{
				Display_UpdateValue(NTC_GetWaterTemperature(TEMPERATURE_OUTLET));
			}
			else //IDLE
			{
				Display_UpdateChar('-','-');
			}

			break;
		}
		//--------------------------------------------
		case SCREEN_FLOW:
		{
			//Display_UpdateValue(Flowmeter_GetFlow()/10);
			Display_UpdateChar('F','L');
			if( Time++> TIMEOUT_SCREEN_FLOW)
			{
				Time = 0;
				Screen = SCREEN_MAIN;
			}
			break;
		}
		//--------------------------------------------
		case SCREEN_POWER:
		{
			//Display_UpdateValue(User[UserIndex].TemperatureSetPoint);
			Display_UpdateChar('P',ScreenTemp);
			if( Time++> TIMEOUT_SCREEN_POWER)
			{
				Time = 0;
				Screen = SCREEN_MAIN;
			}
			break;
		}
		//--------------------------------------------
		case SCREEN_SETPOINT:
		{
			Display_UpdateValue(ScreenTemp);
			Display_UpdatePoints(1, DISPLAY_POINT_MIDDLE | DISPLAY_POINT_RIGHT);
			if( Time++> TIMEOUT_SCREEN_SETPOINT)
			{
				Display_UpdatePoints(0, DISPLAY_POINT_MIDDLE | DISPLAY_POINT_RIGHT);
				Time = 0;
				Screen = SCREEN_MAIN;
			}
			break;
		}
		//--------------------------------------------
		case SCREEN_USER:
		{
            Display_UpdateChar('u',ScreenUser);
			if( Time++> TIMEOUT_SCREEN_USER)
			{
				Time = 0;
				Screen = SCREEN_MAIN;
			}
			break;
		}
		//--------------------------------------------
		case SCREEN_TE:
		{
			Time++;

			if( Time++< TIMEOUT_SCREEN_TE)
			{
				Display_UpdateChar('T','E');
			}
			else
			{
				Display_UpdateValue(NTC_GetWaterTemperature(TEMPERATURE_INLET));
			}

			if( Time++> (TIMEOUT_SCREEN_TE+TIMEOUT_SCREEN_TE) )
			{
				Time = 0;
				Screen = SCREEN_MAIN;
			}
			break;
		}
		//--------------------------------------------
		case SCREEN_TS:
		{
			Time++;

			if( Time++< TIMEOUT_SCREEN_TS)
			{
				Display_UpdateChar('T','S');
			}
			else
			{
				Display_UpdateValue(NTC_GetWaterTemperature(TEMPERATURE_INLET));
			}

			if( Time++> (TIMEOUT_SCREEN_TS+TIMEOUT_SCREEN_TS) )
			{
				Time = 0;
				Screen = SCREEN_MAIN;
			}
			break;
		}
		//--------------------------------------------
		case SCREEN_VZ:
		{
			Display_UpdateChar('V','Z');

			Display_UpdateValue(NTC_GetWaterTemperature(TEMPERATURE_OUTLET));
			if( Time++> TIMEOUT_SCREEN_USER)
			{
				Time = 0;
				Screen = SCREEN_MAIN;
			}
			break;
		}
	}

    if( Screen == SCREEN_MSG)
    {
    	vTaskDelay(600);
    }
    else
    {
    	vTaskDelay(100);
    }
}

//==================================================================================================
//
//==================================================================================================
void Screen_ShowVersion()
{
	Display_UpdateDecimal(0, 0);
}

//==================================================================================================
//
//==================================================================================================
void Screen_ShowFlow()
{
	Time = 0;
	Screen = SCREEN_FLOW;
}

//==================================================================================================
//
//==================================================================================================
void Screen_ShowSetPoint( uint16_t SP )
{
	Time = 0;
	ScreenTemp = SP;
	Screen = SCREEN_SETPOINT;
}

//==================================================================================================
//
//==================================================================================================
void Screen_ShowPower(uint8_t Power )
{
	Time = 0;
	ScreenTemp = Power+0x30;
	Screen = SCREEN_POWER;
}

//==================================================================================================
//
//==================================================================================================
void Screen_ShowUser( uint8_t User )
{
	Time = 0;
	ScreenUser = User+0x30;
	if(User == 0) ScreenUser = ScreenUser+6;
	Screen = SCREEN_USER;
}

//==================================================================================================
//
//==================================================================================================
void Screen_ShowMessage( char *Buff, uint8_t SizeBuff )
{
	sprintf( (char*)DisplayBuffer, "%s", Buff);
	iSize = SizeBuff;
	iSizeAux = 0;
	Screen = SCREEN_MSG;
}

//==================================================================================================
//
//==================================================================================================
void Screen_SetMainScreen( uint8_t Scr )
{
	MainScreen = Scr;
}
